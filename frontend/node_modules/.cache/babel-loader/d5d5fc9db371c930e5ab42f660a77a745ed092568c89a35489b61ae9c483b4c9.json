{"ast":null,"code":"import _objectSpread from\"C:/my project/Donation-App-master1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_NOTIFICATIONS,GET_NOTIFICATION,NOTIFICATION_ERROR,CREATE_NOTIFICATION,MARK_NOTIFICATION_READ,MARK_ALL_NOTIFICATIONS_READ,DELETE_NOTIFICATION,GET_NOTIFICATION_COUNT}from'../actions/types';const initialState={notifications:[],notification:null,loading:true,error:{},unreadCount:0};export default function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;const{type,payload}=action;switch(type){case GET_NOTIFICATIONS:return _objectSpread(_objectSpread({},state),{},{notifications:payload,loading:false});case GET_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{notification:payload,loading:false});case CREATE_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{notifications:[payload,...state.notifications],loading:false});case MARK_NOTIFICATION_READ:return _objectSpread(_objectSpread({},state),{},{notifications:state.notifications.map(notification=>notification._id===payload?_objectSpread(_objectSpread({},notification),{},{read:true}):notification),unreadCount:Math.max(0,state.unreadCount-1)});case MARK_ALL_NOTIFICATIONS_READ:return _objectSpread(_objectSpread({},state),{},{notifications:state.notifications.map(notification=>_objectSpread(_objectSpread({},notification),{},{read:true})),unreadCount:0});case DELETE_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{notifications:state.notifications.filter(notification=>notification._id!==payload)});case GET_NOTIFICATION_COUNT:return _objectSpread(_objectSpread({},state),{},{unreadCount:payload});case NOTIFICATION_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});default:return state;}}","map":{"version":3,"names":["GET_NOTIFICATIONS","GET_NOTIFICATION","NOTIFICATION_ERROR","CREATE_NOTIFICATION","MARK_NOTIFICATION_READ","MARK_ALL_NOTIFICATIONS_READ","DELETE_NOTIFICATION","GET_NOTIFICATION_COUNT","initialState","notifications","notification","loading","error","unreadCount","state","arguments","length","undefined","action","type","payload","_objectSpread","map","_id","read","Math","max","filter"],"sources":["C:/my project/Donation-App-master1/frontend/src/reducers/notification.js"],"sourcesContent":["import {\r\n  GET_NOTIFICATIONS,\r\n  GET_NOTIFICATION,\r\n  NOTIFICATION_ERROR,\r\n  CREATE_NOTIFICATION,\r\n  MARK_NOTIFICATION_READ,\r\n  MARK_ALL_NOTIFICATIONS_READ,\r\n  DELETE_NOTIFICATION,\r\n  GET_NOTIFICATION_COUNT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n  notification: null,\r\n  loading: true,\r\n  error: {},\r\n  unreadCount: 0\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        notifications: payload,\r\n        loading: false\r\n      };\r\n    case GET_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notification: payload,\r\n        loading: false\r\n      };\r\n    case CREATE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [payload, ...state.notifications],\r\n        loading: false\r\n      };\r\n    case MARK_NOTIFICATION_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notification =>\r\n          notification._id === payload ? { ...notification, read: true } : notification\r\n        ),\r\n        unreadCount: Math.max(0, state.unreadCount - 1)\r\n      };\r\n    case MARK_ALL_NOTIFICATIONS_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notification => ({ ...notification, read: true })),\r\n        unreadCount: 0\r\n      };\r\n    case DELETE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(notification => notification._id !== payload)\r\n      };\r\n    case GET_NOTIFICATION_COUNT:\r\n      return {\r\n        ...state,\r\n        unreadCount: payload\r\n      };\r\n    case NOTIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"gIAAA,OACEA,iBAAiB,CACjBC,gBAAgB,CAChBC,kBAAkB,CAClBC,mBAAmB,CACnBC,sBAAsB,CACtBC,2BAA2B,CAC3BC,mBAAmB,CACnBC,sBAAsB,KACjB,kBAAkB,CAEzB,KAAM,CAAAC,YAAY,CAAG,CACnBC,aAAa,CAAE,EAAE,CACjBC,YAAY,CAAE,IAAI,CAClBC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,CAAC,CAAC,CACTC,WAAW,CAAE,CACf,CAAC,CAED,cAAe,WAAuC,IAA9B,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGP,YAAY,IAAE,CAAAU,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAClD,KAAM,CAAEE,IAAI,CAAEC,OAAQ,CAAC,CAAGF,MAAM,CAEhC,OAAQC,IAAI,EACV,IAAK,CAAAnB,iBAAiB,CACpB,OAAAqB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRL,aAAa,CAAEW,OAAO,CACtBT,OAAO,CAAE,KAAK,GAElB,IAAK,CAAAV,gBAAgB,CACnB,OAAAoB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRJ,YAAY,CAAEU,OAAO,CACrBT,OAAO,CAAE,KAAK,GAElB,IAAK,CAAAR,mBAAmB,CACtB,OAAAkB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRL,aAAa,CAAE,CAACW,OAAO,CAAE,GAAGN,KAAK,CAACL,aAAa,CAAC,CAChDE,OAAO,CAAE,KAAK,GAElB,IAAK,CAAAP,sBAAsB,CACzB,OAAAiB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRL,aAAa,CAAEK,KAAK,CAACL,aAAa,CAACa,GAAG,CAACZ,YAAY,EACjDA,YAAY,CAACa,GAAG,GAAKH,OAAO,CAAAC,aAAA,CAAAA,aAAA,IAAQX,YAAY,MAAEc,IAAI,CAAE,IAAI,GAAKd,YACnE,CAAC,CACDG,WAAW,CAAEY,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEZ,KAAK,CAACD,WAAW,CAAG,CAAC,CAAC,GAEnD,IAAK,CAAAR,2BAA2B,CAC9B,OAAAgB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRL,aAAa,CAAEK,KAAK,CAACL,aAAa,CAACa,GAAG,CAACZ,YAAY,EAAAW,aAAA,CAAAA,aAAA,IAAUX,YAAY,MAAEc,IAAI,CAAE,IAAI,EAAG,CAAC,CACzFX,WAAW,CAAE,CAAC,GAElB,IAAK,CAAAP,mBAAmB,CACtB,OAAAe,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRL,aAAa,CAAEK,KAAK,CAACL,aAAa,CAACkB,MAAM,CAACjB,YAAY,EAAIA,YAAY,CAACa,GAAG,GAAKH,OAAO,CAAC,GAE3F,IAAK,CAAAb,sBAAsB,CACzB,OAAAc,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRD,WAAW,CAAEO,OAAO,GAExB,IAAK,CAAAlB,kBAAkB,CACrB,OAAAmB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRF,KAAK,CAAEQ,OAAO,CACdT,OAAO,CAAE,KAAK,GAElB,QACE,MAAO,CAAAG,KAAK,CAChB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}