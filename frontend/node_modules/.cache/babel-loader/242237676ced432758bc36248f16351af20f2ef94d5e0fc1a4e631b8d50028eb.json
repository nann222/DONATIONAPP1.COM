{"ast":null,"code":"import { GET_LOGISTICS, GET_LOGISTICS_ITEM, LOGISTICS_ERROR, CREATE_LOGISTICS, UPDATE_LOGISTICS } from '../actions/types';\nconst initialState = {\n  logistics: [],\n  logisticsItem: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_LOGISTICS:\n      return {\n        ...state,\n        logistics: payload,\n        loading: false\n      };\n    case GET_LOGISTICS_ITEM:\n      return {\n        ...state,\n        logisticsItem: payload,\n        loading: false\n      };\n    case CREATE_LOGISTICS:\n      return {\n        ...state,\n        logistics: [payload, ...state.logistics],\n        loading: false\n      };\n    case UPDATE_LOGISTICS:\n      return {\n        ...state,\n        logistics: state.logistics.map(item => item._id === payload._id ? payload : item),\n        loading: false\n      };\n    case LOGISTICS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_LOGISTICS","GET_LOGISTICS_ITEM","LOGISTICS_ERROR","CREATE_LOGISTICS","UPDATE_LOGISTICS","initialState","logistics","logisticsItem","loading","error","state","action","type","payload","map","item","_id"],"sources":["C:/my project/Donation-App-master1/frontend/src/reducers/logistics.js"],"sourcesContent":["import {\r\n  GET_LOGISTICS,\r\n  GET_LOGISTICS_ITEM,\r\n  LOGISTICS_ERROR,\r\n  CREATE_LOGISTICS,\r\n  UPDATE_LOGISTICS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logistics: [],\r\n  logisticsItem: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_LOGISTICS:\r\n      return {\r\n        ...state,\r\n        logistics: payload,\r\n        loading: false\r\n      };\r\n    case GET_LOGISTICS_ITEM:\r\n      return {\r\n        ...state,\r\n        logisticsItem: payload,\r\n        loading: false\r\n      };\r\n    case CREATE_LOGISTICS:\r\n      return {\r\n        ...state,\r\n        logistics: [payload, ...state.logistics],\r\n        loading: false\r\n      };\r\n    case UPDATE_LOGISTICS:\r\n      return {\r\n        ...state,\r\n        logistics: state.logistics.map(item =>\r\n          item._id === payload._id ? payload : item\r\n        ),\r\n        loading: false\r\n      };\r\n    case LOGISTICS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"AAAA,SACEA,aAAa,EACbC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,QACX,kBAAkB;AAEzB,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,IAAI;EACnBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,eAAe,UAASC,KAAK,GAAGL,YAAY,EAAEM,MAAM,EAAE;EACpD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKZ,aAAa;MAChB,OAAO;QACL,GAAGU,KAAK;QACRJ,SAAS,EAAEO,OAAO;QAClBL,OAAO,EAAE;MACX,CAAC;IACH,KAAKP,kBAAkB;MACrB,OAAO;QACL,GAAGS,KAAK;QACRH,aAAa,EAAEM,OAAO;QACtBL,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,gBAAgB;MACnB,OAAO;QACL,GAAGO,KAAK;QACRJ,SAAS,EAAE,CAACO,OAAO,EAAE,GAAGH,KAAK,CAACJ,SAAS,CAAC;QACxCE,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,gBAAgB;MACnB,OAAO;QACL,GAAGM,KAAK;QACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACQ,GAAG,CAACC,IAAI,IACjCA,IAAI,CAACC,GAAG,KAAKH,OAAO,CAACG,GAAG,GAAGH,OAAO,GAAGE,IACvC,CAAC;QACDP,OAAO,EAAE;MACX,CAAC;IACH,KAAKN,eAAe;MAClB,OAAO;QACL,GAAGQ,KAAK;QACRD,KAAK,EAAEI,OAAO;QACdL,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}