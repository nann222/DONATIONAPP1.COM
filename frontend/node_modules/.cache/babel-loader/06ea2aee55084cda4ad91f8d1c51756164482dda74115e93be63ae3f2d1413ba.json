{"ast":null,"code":"import axios from'axios';import{setAlert}from'./alert';import{GET_FEEDBACKS,GET_FEEDBACK,FEEDBACK_ERROR,CREATE_FEEDBACK}from'./types';// Get all feedbacks\nexport const getFeedbacks=()=>async dispatch=>{try{const res=await axios.get('/api/feedbacks');dispatch({type:GET_FEEDBACKS,payload:res.data});}catch(err){dispatch({type:FEEDBACK_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get feedback by ID\nexport const getFeedbackById=id=>async dispatch=>{try{const res=await axios.get(\"/api/feedbacks/\".concat(id));dispatch({type:GET_FEEDBACK,payload:res.data});}catch(err){dispatch({type:FEEDBACK_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Create new feedback\nexport const createFeedback=(formData,history)=>async dispatch=>{const config={headers:{'Content-Type':'application/json'}};try{const res=await axios.post('/api/feedbacks',formData,config);dispatch({type:CREATE_FEEDBACK,payload:res.data});dispatch(setAlert('Feedback Submitted','success'));// Optionally redirect\n// history.push('/dashboard');\n}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:FEEDBACK_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};","map":{"version":3,"names":["axios","setAlert","GET_FEEDBACKS","GET_FEEDBACK","FEEDBACK_ERROR","CREATE_FEEDBACK","getFeedbacks","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getFeedbackById","id","concat","createFeedback","formData","history","config","headers","post","errors","forEach","error"],"sources":["C:/my project/Donation-App-master1/frontend/src/actions/feedback.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_FEEDBACKS,\n  GET_FEEDBACK,\n  FEEDBACK_ERROR,\n  CREATE_FEEDBACK\n} from './types';\n\n// Get all feedbacks\nexport const getFeedbacks = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/feedbacks');\n    dispatch({\n      type: GET_FEEDBACKS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FEEDBACK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get feedback by ID\nexport const getFeedbackById = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/feedbacks/${id}`);\n    dispatch({\n      type: GET_FEEDBACK,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FEEDBACK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create new feedback\nexport const createFeedback = (formData, history) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/feedbacks', formData, config);\n    dispatch({\n      type: CREATE_FEEDBACK,\n      payload: res.data\n    });\n    dispatch(setAlert('Feedback Submitted', 'success'));\n    // Optionally redirect\n    // history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: FEEDBACK_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,SAAS,CAClC,OACEC,aAAa,CACbC,YAAY,CACZC,cAAc,CACdC,eAAe,KACV,SAAS,CAEhB;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CACpD,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAR,KAAK,CAACS,GAAG,CAAC,gBAAgB,CAAC,CAC7CF,QAAQ,CAAC,CACPG,IAAI,CAAER,aAAa,CACnBS,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CACJ,CAAE,MAAOC,GAAG,CAAE,CACZN,QAAQ,CAAC,CACPG,IAAI,CAAEN,cAAc,CACpBO,OAAO,CAAE,CAAEG,GAAG,CAAED,GAAG,CAACE,QAAQ,CAACC,UAAU,CAAEC,MAAM,CAAEJ,GAAG,CAACE,QAAQ,CAACE,MAAO,CACvE,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,eAAe,CAAIC,EAAE,EAAK,KAAO,CAAAZ,QAAQ,EAAK,CACzD,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAR,KAAK,CAACS,GAAG,mBAAAW,MAAA,CAAmBD,EAAE,CAAE,CAAC,CACnDZ,QAAQ,CAAC,CACPG,IAAI,CAAEP,YAAY,CAClBQ,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CACJ,CAAE,MAAOC,GAAG,CAAE,CACZN,QAAQ,CAAC,CACPG,IAAI,CAAEN,cAAc,CACpBO,OAAO,CAAE,CAAEG,GAAG,CAAED,GAAG,CAACE,QAAQ,CAACC,UAAU,CAAEC,MAAM,CAAEJ,GAAG,CAACE,QAAQ,CAACE,MAAO,CACvE,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,cAAc,CAAGA,CAACC,QAAQ,CAAEC,OAAO,GAAK,KAAO,CAAAhB,QAAQ,EAAK,CACvE,KAAM,CAAAiB,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,GAAI,CACF,KAAM,CAAAjB,GAAG,CAAG,KAAM,CAAAR,KAAK,CAAC0B,IAAI,CAAC,gBAAgB,CAAEJ,QAAQ,CAAEE,MAAM,CAAC,CAChEjB,QAAQ,CAAC,CACPG,IAAI,CAAEL,eAAe,CACrBM,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CACFL,QAAQ,CAACN,QAAQ,CAAC,oBAAoB,CAAE,SAAS,CAAC,CAAC,CACnD;AACA;AACF,CAAE,MAAOY,GAAG,CAAE,CACZ,KAAM,CAAAc,MAAM,CAAGd,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACe,MAAM,CACvC,GAAIA,MAAM,CAAE,CACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,EAAKtB,QAAQ,CAACN,QAAQ,CAAC4B,KAAK,CAACf,GAAG,CAAE,QAAQ,CAAC,CAAC,CAAC,CACpE,CACAP,QAAQ,CAAC,CACPG,IAAI,CAAEN,cAAc,CACpBO,OAAO,CAAE,CAAEG,GAAG,CAAED,GAAG,CAACE,QAAQ,CAACC,UAAU,CAAEC,MAAM,CAAEJ,GAAG,CAACE,QAAQ,CAACE,MAAO,CACvE,CAAC,CAAC,CACJ,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}