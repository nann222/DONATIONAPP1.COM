{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({\n  name,\n  email,\n  password,\n  role,\n  phone,\n  address,\n  organization\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    role,\n    phone,\n    address,\n    organization\n  });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","role","phone","address","organization","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/my project/Donation-App-master1/frontend/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password, role, phone, address, organization }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password, role, phone, address, organization });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}