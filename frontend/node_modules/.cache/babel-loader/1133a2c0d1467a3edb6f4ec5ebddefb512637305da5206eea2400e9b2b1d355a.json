{"ast":null,"code":"var _jsxFileName = \"C:\\\\my project\\\\Donation-App-master1\\\\frontend\\\\src\\\\components\\\\feedback\\\\FeedbackForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createFeedback } from '../../actions/feedback';\nimport { TextField, Button, Typography, Container, Grid, Paper, Rating } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackForm = ({\n  createFeedback,\n  history,\n  match\n}) => {\n  _s();\n  // Assuming the donation/request ID might come from URL params if feedback is specific\n  // For generic feedback, this might not be needed or could be optional\n  const relatedId = match && match.params && match.params.id;\n  const [formData, setFormData] = useState({\n    rating: 3,\n    // Default rating\n    comment: '',\n    feedbackType: relatedId ? 'Transaction' : 'General' // Example logic\n  });\n  const {\n    rating,\n    comment,\n    feedbackType\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onRatingChange = (event, newValue) => {\n    setFormData({\n      ...formData,\n      rating: newValue\n    });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!comment) {\n      // Consider using the alert action here\n      console.error('Comment is required for feedback');\n      return;\n    }\n    const feedbackData = {\n      ...formData,\n      relatedDonation: feedbackType === 'Transaction' && relatedId ? relatedId : undefined\n      // relatedRequest: feedbackType === 'Transaction' && relatedId ? relatedId : undefined, // if feedback can be for requests too\n    };\n    createFeedback(feedbackData, history);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: Paper,\n    sx: {\n      mt: 4,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"legend\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"rating\",\n            value: rating,\n            onChange: onRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"comment\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            label: \"Your Feedback/Comment\",\n            value: comment,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), relatedId && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: [\"Feedback related to transaction ID: \", relatedId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackForm, \"p5LHrvqpLNiCEhnseQMoKTHhlto=\");\n_c = FeedbackForm;\nFeedbackForm.propTypes = {\n  createFeedback: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object // If using react-router and expecting params\n};\nexport default connect(null, {\n  createFeedback\n})(FeedbackForm);\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["React","useState","connect","PropTypes","createFeedback","TextField","Button","Typography","Container","Grid","Paper","Rating","jsxDEV","_jsxDEV","FeedbackForm","history","match","_s","relatedId","params","id","formData","setFormData","rating","comment","feedbackType","onChange","e","target","name","value","onRatingChange","event","newValue","onSubmit","preventDefault","console","error","feedbackData","relatedDonation","undefined","component","sx","mt","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","required","fullWidth","multiline","rows","label","type","color","_c","propTypes","func","isRequired","object","$RefreshReg$"],"sources":["C:/my project/Donation-App-master1/frontend/src/components/feedback/FeedbackForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createFeedback } from '../../actions/feedback';\nimport { TextField, Button, Typography, Container, Grid, Paper, Rating } from '@mui/material';\n\nconst FeedbackForm = ({ createFeedback, history, match }) => {\n  // Assuming the donation/request ID might come from URL params if feedback is specific\n  // For generic feedback, this might not be needed or could be optional\n  const relatedId = match && match.params && match.params.id; \n\n  const [formData, setFormData] = useState({\n    rating: 3, // Default rating\n    comment: '',\n    feedbackType: relatedId ? 'Transaction' : 'General' // Example logic\n  });\n\n  const { rating, comment, feedbackType } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  \n  const onRatingChange = (event, newValue) => {\n    setFormData({ ...formData, rating: newValue });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!comment) {\n      // Consider using the alert action here\n      console.error('Comment is required for feedback');\n      return;\n    }\n    const feedbackData = {\n      ...formData,\n      relatedDonation: feedbackType === 'Transaction' && relatedId ? relatedId : undefined,\n      // relatedRequest: feedbackType === 'Transaction' && relatedId ? relatedId : undefined, // if feedback can be for requests too\n    };\n    createFeedback(feedbackData, history);\n  };\n\n  return (\n    <Container component={Paper} sx={{ mt: 4, p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Submit Feedback\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography component=\"legend\">Rating</Typography>\n            <Rating\n              name=\"rating\"\n              value={rating}\n              onChange={onRatingChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              name=\"comment\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              multiline\n              rows={4}\n              label=\"Your Feedback/Comment\"\n              value={comment}\n              onChange={onChange}\n            />\n          </Grid>\n           {/* Optional: Field for feedback type if not derived \n           <Grid item xs={12} sm={6}>\n            <TextField\n              name=\"feedbackType\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Feedback Type (e.g., General, Transaction)\"\n              value={feedbackType}\n              onChange={onChange}\n            />\n          </Grid>\n          */}\n          {relatedId && (\n            <Grid item xs={12}>\n              <Typography variant=\"caption\">\n                Feedback related to transaction ID: {relatedId}\n              </Typography>\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n              Submit Feedback\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n};\n\nFeedbackForm.propTypes = {\n  createFeedback: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object // If using react-router and expecting params\n};\n\nexport default connect(null, { createFeedback })(FeedbackForm);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,YAAY,GAAGA,CAAC;EAAEV,cAAc;EAAEW,OAAO;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3D;EACA;EACA,MAAMC,SAAS,GAAGF,KAAK,IAAIA,KAAK,CAACG,MAAM,IAAIH,KAAK,CAACG,MAAM,CAACC,EAAE;EAE1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IACvCsB,MAAM,EAAE,CAAC;IAAE;IACXC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAEP,SAAS,GAAG,aAAa,GAAG,SAAS,CAAC;EACtD,CAAC,CAAC;EAEF,MAAM;IAAEK,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGJ,QAAQ;EAElD,MAAMK,QAAQ,GAAIC,CAAC,IACjBL,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAE/D,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC1CX,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEE,MAAM,EAAEU;IAAS,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,QAAQ,GAAIP,CAAC,IAAK;IACtBA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,OAAO,EAAE;MACZ;MACAY,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACjD;IACF;IACA,MAAMC,YAAY,GAAG;MACnB,GAAGjB,QAAQ;MACXkB,eAAe,EAAEd,YAAY,KAAK,aAAa,IAAIP,SAAS,GAAGA,SAAS,GAAGsB;MAC3E;IACF,CAAC;IACDpC,cAAc,CAACkC,YAAY,EAAEvB,OAAO,CAAC;EACvC,CAAC;EAED,oBACEF,OAAA,CAACL,SAAS;IAACiC,SAAS,EAAE/B,KAAM;IAACgC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC/ChC,OAAA,CAACN,UAAU;MAACuC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbtC,OAAA;MAAMqB,QAAQ,EAAEA,QAAS;MAAAW,QAAA,eACvBhC,OAAA,CAACJ,IAAI;QAAC2C,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAR,QAAA,gBACzBhC,OAAA,CAACJ,IAAI;UAAC6C,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,gBAChBhC,OAAA,CAACN,UAAU;YAACkC,SAAS,EAAC,QAAQ;YAAAI,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClDtC,OAAA,CAACF,MAAM;YACLkB,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEP,MAAO;YACdG,QAAQ,EAAEK;UAAe;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPtC,OAAA,CAACJ,IAAI;UAAC6C,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,eAChBhC,OAAA,CAACR,SAAS;YACRwB,IAAI,EAAC,SAAS;YACdiB,OAAO,EAAC,UAAU;YAClBU,QAAQ;YACRC,SAAS;YACTC,SAAS;YACTC,IAAI,EAAE,CAAE;YACRC,KAAK,EAAC,uBAAuB;YAC7B9B,KAAK,EAAEN,OAAQ;YACfE,QAAQ,EAAEA;UAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAcNjC,SAAS,iBACRL,OAAA,CAACJ,IAAI;UAAC6C,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,eAChBhC,OAAA,CAACN,UAAU;YAACuC,OAAO,EAAC,SAAS;YAAAD,QAAA,GAAC,sCACQ,EAAC3B,SAAS;UAAA;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CACP,eACDtC,OAAA,CAACJ,IAAI;UAAC6C,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,eAChBhC,OAAA,CAACP,MAAM;YAACuD,IAAI,EAAC,QAAQ;YAACJ,SAAS;YAACX,OAAO,EAAC,WAAW;YAACgB,KAAK,EAAC,SAAS;YAAAjB,QAAA,EAAC;UAEpE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAAClC,EAAA,CA5FIH,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AA8FlBA,YAAY,CAACkD,SAAS,GAAG;EACvB5D,cAAc,EAAED,SAAS,CAAC8D,IAAI,CAACC,UAAU;EACzCnD,OAAO,EAAEZ,SAAS,CAACgE,MAAM,CAACD,UAAU;EACpClD,KAAK,EAAEb,SAAS,CAACgE,MAAM,CAAC;AAC1B,CAAC;AAED,eAAejE,OAAO,CAAC,IAAI,EAAE;EAAEE;AAAe,CAAC,CAAC,CAACU,YAAY,CAAC;AAAC,IAAAiD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}