{"ast":null,"code":"import axios from'axios';import{setAlert}from'./alert';import{GET_DONATIONS,GET_DONATION,DONATION_ERROR,CREATE_DONATION}from'./types';// Get donations\nexport const getDonations=()=>async dispatch=>{try{const res=await axios.get('/api/donations');dispatch({type:GET_DONATIONS,payload:res.data});}catch(err){dispatch({type:DONATION_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Create donation\nexport const createNewDonation=(formData,history)=>async dispatch=>{try{const config={headers:{'Content-Type':'application/json'}};const res=await axios.post('/api/donations',formData,config);dispatch({type:CREATE_DONATION,payload:res.data});dispatch(setAlert('Donation created successfully','success'));history.push('/donor/dashboard');}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'error')));}dispatch({type:DONATION_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get donation by ID\nexport const getDonationById=id=>async dispatch=>{try{const res=await axios.get(\"/api/donations/\".concat(id));dispatch({type:GET_DONATION,payload:res.data});}catch(err){dispatch({type:DONATION_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Create a new donation\nexport const createDonation=(formData,history)=>async dispatch=>{const config={headers:{'Content-Type':'application/json'}};try{const res=await axios.post('/api/donations',formData,config);dispatch({type:CREATE_DONATION,payload:res.data});dispatch(setAlert('Donation Created','success'));// Optionally redirect after creation\n// history.push('/dashboard'); // Or wherever appropriate\n}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:DONATION_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};","map":{"version":3,"names":["axios","setAlert","GET_DONATIONS","GET_DONATION","DONATION_ERROR","CREATE_DONATION","getDonations","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createNewDonation","formData","history","config","headers","post","push","errors","forEach","error","getDonationById","id","concat","createDonation"],"sources":["C:/my project/Donation-App-master1/frontend/src/actions/donation.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_DONATIONS,\n  GET_DONATION,\n  DONATION_ERROR,\n  CREATE_DONATION\n} from './types';\n\n// Get donations\nexport const getDonations = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/donations');\n    dispatch({\n      type: GET_DONATIONS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: DONATION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create donation\nexport const createNewDonation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/donations', formData, config);\n    dispatch({\n      type: CREATE_DONATION,\n      payload: res.data\n    });\n    dispatch(setAlert('Donation created successfully', 'success'));\n    history.push('/donor/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: DONATION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get donation by ID\nexport const getDonationById = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/donations/${id}`);\n    dispatch({\n      type: GET_DONATION,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: DONATION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create a new donation\nexport const createDonation = (formData, history) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/donations', formData, config);\n    dispatch({\n      type: CREATE_DONATION,\n      payload: res.data\n    });\n    dispatch(setAlert('Donation Created', 'success'));\n    // Optionally redirect after creation\n    // history.push('/dashboard'); // Or wherever appropriate\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: DONATION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}